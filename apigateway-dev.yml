# Proprietes de l'application
spring:
  application:
    name: apigateway                                   # nom de l'application
  cloud:
    # Configuration de l'API Gateway
    gateway:
      discovery:
        locator:
          enabled: true #activation eureka locator
          lowerCaseServiceId: true
          # car le nom des services est en minuscule dans l'URL
      # Configuration des routes de l'API Gateway
      routes:
        #Service VEHICULES-SERVICE
        - id: vehicule-service
          uri: lb://VEHICULESSERVICE/ #Attention : lb et pas HTTP. Lb est prêt pour faire du load-balancing
          predicates:
            # On matche tout ce qui commence par /api/clients
            - Path=/api/vehicules/**
          filters:
            # On va réécrire l'URL pour enlever le /api/client
            - RewritePath=/api/vehicules(?<segment>/?.*), /$\{segment}
        #Service STATIONS-SERVICE
        - id: stations-service
          uri: lb://STATIONSSERVICE/
          predicates:
            - Path=/api/stations/**
          filters:
            - RewritePath=/api/stations(?<segment>/?.*), /$\{segment}
      enabled: on # Activation gateway
    # Activation remontée management dans Eureka
    config:
      service-registry:
        auto-registration:
          register-management: on
# Activation des endpoints pour le monitoring
management:
  endpoints:
    web:
      exposure:
        include:
          env,health,
          info,metrics,
          loggers,mappings, prometheus
  # configuration lien vers serveur Zipkin
  zipkin:
    tracing:
      # SANS DOCKER COMPOSE
      # endpoint: http://localhost:9411/api/v2/spans
      # AVEC DOCKER COMPOSE
      endpoint: http://evmiagezipkin:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1
# Configuration client de l'annuaire
# L'API Gateway va s'enregistrer comme un micro-service sur l'annuaire
eureka:
  client:
    service-url:
        # SANS DOCKER COMPOSE
        # defaultZone: http://localhost:10001/eureka/ # url d'accès à l'annuaire
        # AVEC DOCKER COMPOSE
        defaultZone: http://evmiageannuaire:10001/eureka/ # url d'accès à l'annuaire

  instance:
    metadata-map:
      prometheus.scrape: "true"
      prometheus.path: "/actuator/prometheus"
      prometheus.port: "${management.server.port}"


# Configuration du log.
logging:
  level:
    org.springframework.web: INFO # Choix du niveau de log affiché
# Proprietes du serveur d'entreprise
server:
  port: 10050   # HTTP (Tomcat) port